# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created: Sun Jan  4 12:52:12 2015
#      by: PyQt4 UI code generator 4.11.2
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName(_fromUtf8("MainWindow"))
        MainWindow.resize(751, 607)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(711, 497))
        MainWindow.setMaximumSize(QtCore.QSize(752, 607))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/ico/film.ico")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/ico/film.ico")), QtGui.QIcon.Normal, QtGui.QIcon.On)
        MainWindow.setWindowIcon(icon)
        MainWindow.setIconSize(QtCore.QSize(32, 32))
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.centralwidget = QtGui.QWidget(MainWindow)
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.frame_inp = QtGui.QFrame(self.centralwidget)
        self.frame_inp.setGeometry(QtCore.QRect(0, 1, 431, 61))
        self.frame_inp.setStyleSheet(_fromUtf8("QFrame#frame_inp{\n"
"background-color:qlineargradient(spread:pad, x1:0, y1:1, x2:1, y2:0, stop:0.00819672 rgba(29, 59, 77, 255), stop:1 rgba(255, 255, 255, 255))\n"
"}"))
        self.frame_inp.setFrameShape(QtGui.QFrame.StyledPanel)
        self.frame_inp.setFrameShadow(QtGui.QFrame.Raised)
        self.frame_inp.setObjectName(_fromUtf8("frame_inp"))
        self.horizontalLayout_2 = QtGui.QHBoxLayout(self.frame_inp)
        self.horizontalLayout_2.setObjectName(_fromUtf8("horizontalLayout_2"))
        self.horizontalLayout = QtGui.QHBoxLayout()
        self.horizontalLayout.setObjectName(_fromUtf8("horizontalLayout"))
        self.lne_url = QtGui.QLineEdit(self.frame_inp)
        self.lne_url.setWhatsThis(_fromUtf8(""))
        self.lne_url.setText(_fromUtf8(""))
        self.lne_url.setMaxLength(40)
        self.lne_url.setObjectName(_fromUtf8("lne_url"))
        self.horizontalLayout.addWidget(self.lne_url)
        self.lbl_dontchange = QtGui.QLabel(self.frame_inp)
        self.lbl_dontchange.setObjectName(_fromUtf8("lbl_dontchange"))
        self.horizontalLayout.addWidget(self.lbl_dontchange)
        self.cmb_plot = QtGui.QComboBox(self.frame_inp)
        self.cmb_plot.setObjectName(_fromUtf8("cmb_plot"))
        self.cmb_plot.addItem(_fromUtf8(""))
        self.cmb_plot.addItem(_fromUtf8(""))
        self.horizontalLayout.addWidget(self.cmb_plot)
        self.btn_search = QtGui.QToolButton(self.frame_inp)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(_fromUtf8(":/ico/film.ico")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_search.setIcon(icon1)
        self.btn_search.setIconSize(QtCore.QSize(32, 32))
        self.btn_search.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.btn_search.setObjectName(_fromUtf8("btn_search"))
        self.horizontalLayout.addWidget(self.btn_search)
        self.horizontalLayout_2.addLayout(self.horizontalLayout)
        self.lbl_pic = QtGui.QLabel(self.centralwidget)
        self.lbl_pic.setGeometry(QtCore.QRect(430, -10, 321, 441))
        self.lbl_pic.setText(_fromUtf8(""))
        self.lbl_pic.setPixmap(QtGui.QPixmap(_fromUtf8(":/ico/lord-shiva.jpg")))
        self.lbl_pic.setScaledContents(True)
        self.lbl_pic.setObjectName(_fromUtf8("lbl_pic"))
        self.layoutWidget = QtGui.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(3, 63, 421, 371))
        self.layoutWidget.setObjectName(_fromUtf8("layoutWidget"))
        self.verticalLayout = QtGui.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setMargin(0)
        self.verticalLayout.setObjectName(_fromUtf8("verticalLayout"))
        self.horizontalLayout_3 = QtGui.QHBoxLayout()
        self.horizontalLayout_3.setObjectName(_fromUtf8("horizontalLayout_3"))
        self.label = QtGui.QLabel(self.layoutWidget)
        self.label.setObjectName(_fromUtf8("label"))
        self.horizontalLayout_3.addWidget(self.label)
        self.rbtn_title = QtGui.QRadioButton(self.layoutWidget)
        self.rbtn_title.setChecked(True)
        self.rbtn_title.setObjectName(_fromUtf8("rbtn_title"))
        self.horizontalLayout_3.addWidget(self.rbtn_title)
        self.rbtn_search = QtGui.QRadioButton(self.layoutWidget)
        self.rbtn_search.setObjectName(_fromUtf8("rbtn_search"))
        self.horizontalLayout_3.addWidget(self.rbtn_search)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.txb_title = QtGui.QTextBrowser(self.layoutWidget)
        self.txb_title.setObjectName(_fromUtf8("txb_title"))
        self.verticalLayout.addWidget(self.txb_title)
        self.layoutWidget1 = QtGui.QWidget(self.centralwidget)
        self.layoutWidget1.setGeometry(QtCore.QRect(0, 440, 751, 121))
        self.layoutWidget1.setObjectName(_fromUtf8("layoutWidget1"))
        self.horizontalLayout_4 = QtGui.QHBoxLayout(self.layoutWidget1)
        self.horizontalLayout_4.setMargin(0)
        self.horizontalLayout_4.setObjectName(_fromUtf8("horizontalLayout_4"))
        self.txtb_plot = QtGui.QTextBrowser(self.layoutWidget1)
        self.txtb_plot.setObjectName(_fromUtf8("txtb_plot"))
        self.horizontalLayout_4.addWidget(self.txtb_plot)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtGui.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 751, 23))
        self.menubar.setObjectName(_fromUtf8("menubar"))
        self.menuFile = QtGui.QMenu(self.menubar)
        self.menuFile.setObjectName(_fromUtf8("menuFile"))
        self.menuEdit = QtGui.QMenu(self.menubar)
        self.menuEdit.setObjectName(_fromUtf8("menuEdit"))
        self.menuHelp = QtGui.QMenu(self.menubar)
        self.menuHelp.setObjectName(_fromUtf8("menuHelp"))
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtGui.QStatusBar(MainWindow)
        self.statusbar.setSizeGripEnabled(False)
        self.statusbar.setObjectName(_fromUtf8("statusbar"))
        MainWindow.setStatusBar(self.statusbar)
        self.actionClose = QtGui.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(_fromUtf8(":/ico/drop.ico")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClose.setIcon(icon2)
        self.actionClose.setIconVisibleInMenu(True)
        self.actionClose.setObjectName(_fromUtf8("actionClose"))
        self.actionPaste = QtGui.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(_fromUtf8(":/ico/combo.ico")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPaste.setIcon(icon3)
        self.actionPaste.setIconVisibleInMenu(True)
        self.actionPaste.setObjectName(_fromUtf8("actionPaste"))
        self.actionPaste_from_clipboard = QtGui.QAction(MainWindow)
        self.actionPaste_from_clipboard.setIcon(icon3)
        self.actionPaste_from_clipboard.setIconVisibleInMenu(True)
        self.actionPaste_from_clipboard.setObjectName(_fromUtf8("actionPaste_from_clipboard"))
        self.actionUsage = QtGui.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(_fromUtf8(":/ico/page.ico")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUsage.setIcon(icon4)
        self.actionUsage.setIconVisibleInMenu(True)
        self.actionUsage.setObjectName(_fromUtf8("actionUsage"))
        self.actionAbout = QtGui.QAction(MainWindow)
        self.actionAbout.setIcon(icon4)
        self.actionAbout.setIconVisibleInMenu(True)
        self.actionAbout.setObjectName(_fromUtf8("actionAbout"))
        self.menuFile.addAction(self.actionClose)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addAction(self.actionPaste_from_clipboard)
        self.menuHelp.addAction(self.actionUsage)
        self.menuHelp.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QObject.connect(self.actionClose, QtCore.SIGNAL(_fromUtf8("activated()")), MainWindow.close)
        QtCore.QObject.connect(self.actionPaste, QtCore.SIGNAL(_fromUtf8("activated()")), self.lne_url.paste)
        QtCore.QObject.connect(self.actionPaste_from_clipboard, QtCore.SIGNAL(_fromUtf8("activated()")), self.lne_url.paste)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(_translate("MainWindow", "movie ratings viewer", None))
        self.lne_url.setStatusTip(_translate("MainWindow", "enter the movie name", None))
        self.lbl_dontchange.setStatusTip(_translate("MainWindow", "choose the plot of movie", None))
        self.lbl_dontchange.setText(_translate("MainWindow", "    plot ", None))
        self.cmb_plot.setStatusTip(_translate("MainWindow", "choose the plot of movie", None))
        self.cmb_plot.setItemText(0, _translate("MainWindow", "short", None))
        self.cmb_plot.setItemText(1, _translate("MainWindow", "long", None))
        self.btn_search.setText(_translate("MainWindow", "search", None))
        self.btn_search.setShortcut(_translate("MainWindow", "Return", None))
        self.label.setText(_translate("MainWindow", "search by", None))
        self.rbtn_title.setToolTip(_translate("MainWindow", "search if you are sure of movie name", None))
        self.rbtn_title.setStatusTip(_translate("MainWindow", "searches with the movie name", None))
        self.rbtn_title.setWhatsThis(_translate("MainWindow", "search using this if you are sure of movie name", None))
        self.rbtn_title.setText(_translate("MainWindow", "movie title", None))
        self.rbtn_search.setToolTip(_translate("MainWindow", "search with this if you are not sure with movie name", None))
        self.rbtn_search.setStatusTip(_translate("MainWindow", "search with this if you are not sure with movie name", None))
        self.rbtn_search.setWhatsThis(_translate("MainWindow", "search with this if you are not sure with movie name", None))
        self.rbtn_search.setText(_translate("MainWindow", "movie name", None))
        self.menuFile.setTitle(_translate("MainWindow", "file", None))
        self.menuEdit.setTitle(_translate("MainWindow", "edit", None))
        self.menuHelp.setTitle(_translate("MainWindow", "help", None))
        self.statusbar.setStatusTip(_translate("MainWindow", "movie ratings viewer", None))
        self.actionClose.setText(_translate("MainWindow", "close", None))
        self.actionClose.setStatusTip(_translate("MainWindow", "closes the window", None))
        self.actionPaste.setText(_translate("MainWindow", "paste", None))
        self.actionPaste.setStatusTip(_translate("MainWindow", "paste the movie title or imdb reference", None))
        self.actionPaste_from_clipboard.setText(_translate("MainWindow", "paste from clipboard", None))
        self.actionPaste_from_clipboard.setStatusTip(_translate("MainWindow", "paste the contents from clipboard", None))
        self.actionUsage.setText(_translate("MainWindow", "usage", None))
        self.actionUsage.setStatusTip(_translate("MainWindow", "click for to see how to use this program", None))
        self.actionAbout.setText(_translate("MainWindow", "about", None))
        self.actionAbout.setStatusTip(_translate("MainWindow", "about the author and the license", None))

import resource
